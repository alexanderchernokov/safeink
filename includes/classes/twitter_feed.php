<?php
if(!defined('IN_PRGM')) exit();

/*
 * twitter_feed.php
 *
 * @(#) $Id: twitter_feed.php,v 1.4 2013/07/03 07:40:28 mlemos Exp $
 *
 */

/*
	<package>net.manuellemos.twitterfeed</package>

	<version>@(#) $Id: twitter_feed.php,v 1.4 2013/07/03 07:40:28 mlemos Exp $</version>
	<copyright>Copyright ? (C) Manuel Lemos 2013</copyright>
	<title>Twitter Feed</title>
	<author>Manuel Lemos</author>
	<authoraddress>mlemos-at-acm.org</authoraddress>
*/

class twitter_feed_class extends sd_db_oauth_client
{
/*
	Prefix the feed titles with the statuses users screen names.</purpose>
	Set this variable to <booleanvalue>0</booleanvalue> if you do
	not want to show the user screen name as prefix of each feed item.</usage>
*/
	var $screen_name_prefix = true;

	var $action = '';
	var $statuses = array();
	var $title = '';

	function GetToken()
	{
		if(!$this->Process())
		{
			return false;
		}
		if(!$this->exit && strlen($this->access_token) && strlen($this->access_token_secret))
    {
			$this->action = 'GotToken';
      return true;
    }
		$this->action = 'GetToken';
		return false;
	}

	function GetStatuses($url, $parameters)
	{
    $this->title = '';
		if(!strlen($this->access_token) || !strlen($this->access_token_secret))
		{
			$this->error = 'the Twitter access token and access token secret values are not set';
			return false;
		}
		if(!$this->CallAPI(
        #'https://api.twitter.com/1.1/statuses/'.$statuses.'.json',
			  'https://api.twitter.com'.$url, 'GET', $parameters,
        array('FailOnAccessError'=>true), $this->statuses))
		{
			return false;
		}
    /*
		switch($statuses)
		{
			case 'user_timeline':
				$this->title = 'Twitter statuses of user '.$parameters['screen_name'];
				break;
			default:
				$this->title = 'Twitter statuses';
				break;
		}
    */
		$this->action = 'GotStatuses';
		return(true);
	}

	function GetSearch($search, $parameters)
	{
		if(!strlen($this->access_token) || !strlen($this->access_token_secret))
		{
			$this->error = 'the Twitter access token and access token secret values are not set';
			return false;
		}
		if(!$this->CallAPI(
			'https://api.twitter.com/1.1/search/'.$search.'.json',
			'GET', $parameters, array('FailOnAccessError'=>true), $results))
		{
			return false;
		}
		$this->statuses = $results->statuses;
		switch($search)
		{
			case 'tweets':
				$this->title = 'Twitter search for '.$parameters['q'];
				break;
			default:
				$this->title = 'Twitter search';
				break;
		}
		$this->action = 'GotStatuses';
		return(true);
	}

	function Output($type='')
	{
    if($this->action == 'GotStatuses')
    {
      $this->action = (strtolower($type) == 'rss' ? 'doRSS' : 'doJSON');
    }

		switch($this->action)
		{
			case 'GotToken':
        if(strlen($this->access_token))
          echo '<br>Twitter Access Token available.';
        else
          echo '<br>Twitter Access Token NOT available!';
				break;
      case 'doJSON':
        echo json_encode(
          array(
            'response' => $this->statuses,
            'message' => false
          )
        );
        break;
			case 'doRSS':
				$rss = new rss_writer_class;
				$rss->specification = '2.0';
				$rss->outputencoding = $rss->inputencoding = 'utf-8';
				$rss->about = 'http://www.phpclasses.org/twitter-feed';
				$rss->stylesheet = 'http://'.$_SERVER['HTTP_HOST'].dirname(strtok($_SERVER['REQUEST_URI'], '?')).'/rss2html.xml';
				$rss->rssnamespaces['dc'] = 'http://purl.org/dc/elements/1.1/';
				$rss->rssnamespaces['atom'] = 'http://www.w3.org/2005/Atom';
				$rss->generatedcomment='Generated by: http://www.phpclasses.org/twitter-feed $Revision: 1.4 $';

				$properties = array();
				$properties['description'] = $properties['title'] = $this->title;
				$properties['link'] = 'http://'.$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];
				$properties['pubDate'] = gmstrftime('%a, %d %b %Y %H:%M:%S GMT');
				$properties['atom:link'] = array(
					array(
						'rel'  => 'self',
						'type' => 'application/rss+xml',
						'href' => $properties['link']
					)
				);
				$rss->addchannel($properties);

				foreach($this->statuses as $status)
				{
					$properties = array();
					$properties['title'] = #$properties['description'] =
            ($this->screen_name_prefix ? $status->user->screen_name.': ' : '').$status->text;
					$properties['link'] = $properties['guid'] =
            'https://twitter.com/'.$status->user->screen_name.'/status/'.$status->id_str;
					$properties['pubDate'] = gmstrftime('%a, %d %b %Y %H:%M:%S GMT');
					$properties['dc:creator'] = $status->user->screen_name;
					$rss->additem($properties);
				}

				if($rss->writerss($output))
				{
						Header('Content-Type: text/xml; charset="'.$rss->outputencoding.'"');
						Header('Content-Length: '.strval(strlen($output)));
						echo $output;
				}
				else
				{
						Header('Content-Type: text/plain');
						echo ('Error: '.$rss->error);
				}
				break;
		}
	}

};
